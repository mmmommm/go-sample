// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package golang_example

import (
	"github.com/mmmommm/go-sample/layered-architecture/echo"
	"github.com/mmmommm/go-sample/layered-architecture/handler"
	"github.com/mmmommm/go-sample/layered-architecture/repository"
	"github.com/mmmommm/go-sample/layered-architecture/usecase"
)

// Injectors from wire.go:

func NewEntryPoint() (*EntryPoint, func(), error) {
	userRepository := repository.ProvideUserRepository()
	userGetCase := usecase.ProvideUserGetCase(userRepository)
	userGetHandler := handler.ProvideUserGetHandler(userGetCase)
	handlerHandler := handler.ProvideHandler(userGetHandler)
	echoEcho := echo.ProvideEchoServer(handlerHandler)
	entryPoint := &EntryPoint{
		Srv: echoEcho,
	}
	return entryPoint, func() {
	}, nil
}

// wire.go:

type EntryPoint struct {
	Srv echo.EchoServer
}
